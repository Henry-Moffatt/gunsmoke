@startuml classes
set namespaceSeparator none
class "Box" as main.Box {
  color : tuple
  drawnRect
  dropped : bool
  live : bool
  position
  rect
  touched : list
  checkDamage()
  drawIt()
  move()
}
class "Building" as main.Building {
  drawnRect
  enemies : int
  enemy
  length
  pos
  rect
  scSp
  width
  draw()
}
class "Character" as main.Character {
  c
  d
  drawnRect
  fire
  pos
  rect
  speed
  draw(window)
}
class "Destructible" as main.Destructible {
  h
  scr
  drop()
  takeDamage(amount)
}
class "Enemy" as main.Enemy {
  bullets : list
  randoffsetx : int
  randoffsety : int
  move(playerLocation)
  shoot(playerLocation)
  takeDamage(amount)
}
class "Environment" as main.Environment {
  boxes : list
  buildings : list
  enemies : list
  powerups : list
  scr
  boxMgr()
  healthCheck(index)
  instantiateBox()
  instantiateBuilding()
  manager(playerLocation)
  removeBox(boxToRemove)
  removeEnemy(enemyToRemove)
  spawnEnemy()
}
class "Kamikaze" as main.Kamikaze {
  countDown : int
  countDownStart : bool
  h
  shot : bool
  move(playerLocation)
  shoot(playerLocation)
}
class "Player" as main.Player {
  bullets : list
  cont
  fire
  h
  sc
  speed
  checkDamage()
  increaseFireRate(amount)
  increaseHealth(amount)
  increaseScore(amount)
  increaseSpeed(amount)
  move()
  removeProjectile(itemToRemove)
  shoot(dt)
}
class "Projectile" as main.Projectile {
  a
  d
  drawnRect
  pos
  rect
  speed
  ut : int
  drawCheck()
  move(window)
  moveForEnemy(window)
}
class "powerUp" as main.powerUp {
  collected : bool
  drawnRect
  pos
  rect
  t
  drawAndCheck()
}
main.Box --|> main.Destructible
main.Character --|> main.Destructible
main.Enemy --|> main.Character
main.Kamikaze --|> main.Enemy
main.Player --|> main.Character
main.Enemy --* main.Building : enemies
main.Enemy --* main.Building : enemies
@enduml
